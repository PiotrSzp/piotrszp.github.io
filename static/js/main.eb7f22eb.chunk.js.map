{"version":3,"sources":["reducers/todoReducer.js","reducers/index.js","actions/types.js","store.js","components/ToDoItem.js","actions/todoActions.js","components/Todos.js","components/layout/Header.js","components/pages/About.js","components/AddTodo.js","App.js","index.js"],"names":["initialState","todosList","newTodo","combineReducers","todos","state","action","type","payload","id","Math","random","newTodosList","map","todo","title","completed","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","ToDoItem","toggleTodo","e","preventDefault","props","delTodo","stopPropagation","className","this","onClick","Component","connect","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","todoId","Todos","fetchTodos","nextProps","unshift","key","Header","to","About","AddTodo","onChange","setState","target","value","onSubmit","trim","length","addTodo","name","placeholder","todoTitle","App","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eb7f22eb.chunk.js","sourcesContent":["import { FETCH_TODOS, ADD_TODO, TOGGLE_TODO, DEL_TODO } from \"../actions/types\";\n\nconst initialState = {\n    todosList: [],\n    newTodo: {}\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case FETCH_TODOS:\n            return {\n                ...state,\n                todosList: action.payload\n            };\n        case ADD_TODO:\n            return {\n                ...state,\n                newTodo: {\n                    ...action.payload,\n                    id: Math.random(), //tiny cheat to provide unique-ish id's, because of working with jsonplaceholder\n                }\n            };\n        case TOGGLE_TODO: {\n            const newTodosList = state.todosList.map(todo => {\n                return {\n                    id: todo.id,\n                    title: todo.title,\n                    completed: todo.id === action.payload ? !todo.completed : todo.completed\n                }\n            });\n            return {\n                ...state,\n                todosList: newTodosList\n            };\n        }\n        case DEL_TODO: {\n            return {\n                ...state,\n                todosList: state.todosList.filter(todo => {\n                    return todo.id !== action.payload;\n                })\n            };\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport todoReducer from './todoReducer';\n\nexport default combineReducers({\n    // 'todos' will contain state defined in todoReducer as object {todosList: [], newTodo: {}}\n    todos: todoReducer\n})\n","export const FETCH_TODOS = 'FETCH_TODOS';\nexport const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const DEL_TODO = 'DEL_TODO';","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from './reducers'\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\nimport { toggleTodo, delTodo } from \"../actions/todoActions\";\n\nclass ToDoItem extends Component {\n    toggleTodo = (e) => {\n        e.preventDefault();\n\n        if (typeof this.props.toggleTodo === 'function') {\n            this.props.toggleTodo(this.props.todo)\n        }\n    };\n\n    delTodo = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.delTodo(this.props.todo.id);\n    };\n\n    render() {\n        return (\n            <div className={ this.props.todo.completed ? 'todo-item completed' : 'todo-item' }\n                 onClick={ this.toggleTodo }>\n                <p>{ this.props.todo.title }</p><i className=\"far fa-trash-alt\" onClick={ this.delTodo } />\n            </div>\n        );\n    }\n}\n\n\n// PROP TYPES\nToDoItem.propTypes = {\n    todo: PropTypes.object.isRequired,\n    toggleTodo: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { toggleTodo, delTodo })(ToDoItem);","import { FETCH_TODOS, ADD_TODO, TOGGLE_TODO, DEL_TODO } from \"./types\";\n\nexport const fetchTodos = () => dispatch => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n        .then(res => res.json())\n        .then(todos => dispatch({\n            type: FETCH_TODOS,\n            payload: todos\n        }))\n};\n\nexport const addTodo = todoTitle => dispatch => {\n    fetch('https://jsonplaceholder.typicode.com/todos', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json; charset=UTF-8'\n        },\n        body: JSON.stringify({ title: todoTitle })\n    })\n        .then(res => res.json())\n        .then(todo => dispatch({\n            type: ADD_TODO,\n            payload: todo\n        }))\n};\n\nexport const toggleTodo = todo => dispatch => {\n    fetch(`https://jsonplaceholder.typicode.com/todos/${ todo.id }`, {\n        method: 'PATCH',\n        headers: {\n            'content-type': 'application/json; charset=UTF-8'\n        },\n        body: JSON.stringify({ completed: !todo.completed })\n    })\n        .then(res => res.json())\n        .then(todo => dispatch({\n            type: TOGGLE_TODO,\n            payload: todo.id\n        }))\n};\n\nexport const delTodo = todoId => dispatch => {\n    fetch(`https://jsonplaceholder.typicode.com/todos/${ todoId }`, {\n        method: 'DELETE',\n    })\n        .then(res => res.json())\n        .then(todo => dispatch({\n            type: DEL_TODO,\n            payload: todoId\n        }))\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTodos } from \"../actions/todoActions\";\nimport PropTypes from 'prop-types';\n\nimport ToDoItem from \"./ToDoItem\";\n\nclass Todos extends Component {\n    componentDidMount() {\n        this.props.fetchTodos();\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (nextProps.newTodo) {\n            this.props.todos.unshift(nextProps.newTodo)\n        }\n        return !!nextProps.newTodo;\n    }\n\n    render() {\n        return (\n            <section className={ 'todos' }>\n                { this.props.todos.map(todo =>\n                    <ToDoItem\n                        key={ todo.id }\n                        todo={ todo }\n                    />) }\n            </section>\n        );\n    }\n}\n\n// PROP TYPES\nTodos.propTypes = {\n    todos: PropTypes.array.isRequired,\n    fetchTodos: PropTypes.func.isRequired,\n    newTodo: PropTypes.object,\n};\n\n// MAP STATE TO PROPS\nconst mapStateToProps = state => ({\n    todos: state.todos.todosList,\n    newTodo: state.todos.newTodo,\n});\n\nexport default connect(mapStateToProps, { fetchTodos })(Todos);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header() {\n    return (\n        <header>\n            <h1>To Do List</h1>\n            <nav>\n                <Link to='/' >Home</Link> | <Link to='/about' >About</Link>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <section className='container'>\n                <h2>About App</h2>\n                <p>This is To Do List App v1.0.0. </p>\n                <p>I did it as an exercise of react, react-router, redux and fetching API.</p>\n                <p>&copy; Piotr Szporko 2019</p>\n            </section>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport { addTodo } from \"../actions/todoActions\";\n\nclass AddTodo extends Component {\n    state = {\n        title: ''\n    };\n\n    onChange = e => {\n        e.preventDefault();\n        this.setState({\n            title: e.target.value\n        });\n    };\n\n    onSubmit = e => {\n        e.preventDefault();\n\n        if (this.state.title.trim().length > 0) {\n            this.props.addTodo(this.state.title)\n        }\n\n        this.setState({\n            title: ''\n        })\n    };\n\n    render() {\n        return (\n            <form onSubmit={ this.onSubmit }>\n                <input\n                    type='text'\n                    name='title'\n                    placeholder='Add task...'\n                    value={ this.state.title }\n                    onChange={ this.onChange }\n                />\n                <button\n                    type='submit'\n                    name='submit'\n                >\n                    ADD TASK\n                </button>\n            </form>\n        );\n    }\n}\n\nAddTodo.propTypes = {\n    addTodo: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addTodo })(AddTodo);","// L I B R A R I E S\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\n// C O M P O N E N T S\nimport Todos from './components/Todos';\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport AddTodo from \"./components/AddTodo\";\n\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={ store }>\n                <Router>\n                    <div className=\"App\">\n                        <Header />\n                        <Route exact path='/' render={ props => (\n                            <>\n                                <AddTodo />\n                                <Todos />\n                            </>\n                        ) } />\n                        <Route path='/about' component={ About } />\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}